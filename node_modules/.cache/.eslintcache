[{"/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/index.js":"1","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/App.js":"2","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/reportWebVitals.js":"3","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/Home/home2.js":"4","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/Create/create.js":"5","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/Register/register.js":"6","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/Login/login.js":"7","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/SearchEngine/engine.js":"8","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/MobleNav/mNav.js":"9","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/BigNav/BigNav.js":"10","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/Result/result.js":"11","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/DropDown/dropdown.js":"12"},{"size":535,"mtime":1664651287154,"results":"13","hashOfConfig":"14"},{"size":5366,"mtime":1665983566573,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1663508269150,"results":"16","hashOfConfig":"14"},{"size":275,"mtime":1664290003298,"results":"17","hashOfConfig":"14"},{"size":3773,"mtime":1665948728250,"results":"18","hashOfConfig":"14"},{"size":4367,"mtime":1664474479189,"results":"19","hashOfConfig":"14"},{"size":2369,"mtime":1665982267279,"results":"20","hashOfConfig":"14"},{"size":2623,"mtime":1665519315029,"results":"21","hashOfConfig":"14"},{"size":1524,"mtime":1665983797968,"results":"22","hashOfConfig":"14"},{"size":663,"mtime":1665950055620,"results":"23","hashOfConfig":"14"},{"size":4522,"mtime":1665596327160,"results":"24","hashOfConfig":"14"},{"size":353,"mtime":1665983659491,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19k34kb",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},"/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/index.js",[],[],"/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/App.js",["70","71"],[],"import { useState,useEffect, useRef } from 'react';\nimport './App.css';\nimport './components/Home/home.css';\nimport axios from 'axios';\nimport Home2 from './components/Home/home2';\nimport Create from './components/Create/create';\nimport Login from './components/Login/login';\nimport Register from './components/Register/register';\nimport Engine from './components/SearchEngine/engine';\nimport MNav from './components/MobleNav/mNav';\nimport BigNav from './components/BigNav/BigNav';\n\nfunction App() {\n\n  const [show, setShow] = useState({\n    home : true,\n    create : false,\n    search : false,\n    login : false,\n    register : false\n  });\n  \n\n  const [caption, setCaption] = useState('Your personal note app !!!');\n\n  const checkSession = async (w, s)=>{\n    let rt = false;\n    await axios({\n      method : \"post\",\n      url : \"/\",\n      headers : {},\n      data : {}\n    })\n    .then((ob)=>{\n      if(ob.data.message){\n        setShow(w);\n        setCaption(s);\n        rt = true;\n      }else{\n        setShow({\n          home : false,\n          create : false,\n          search : false,\n          login : true,\n          register : false\n        });\n        setCaption('Tell us Who you are ???')\n        captionDiv.current.style.display = \"block\";\n        rt = false;\n      }\n    })\n\n    return rt;\n  }\n\n  const RenderHome = (CountSet, count)=>{\n    setCaption('Your personal notes app !!')\n    setShow(\n      {\n        home : true,\n        create : false,\n        search : false,\n        login : false,\n        register : false\n      }\n    )\n    // CountSet(count+1);\n    captionDiv.current.style.display = \"block\";\n  }\n  const RenderCreate = async (CountSet, count)=>{\n    await checkSession(\n      {\n        home : false,\n        create : true,\n        search : false,\n        login : false,\n        register : false\n      },\n      'Make your note here !!!'\n    );\n    // CountSet(count+1);\n    captionDiv.current.style.display = \"block\";\n  }\n\n  const captionDiv = useRef();\n  const RenderSearch = async (CountSet, count)=>{\n    await checkSession(\n      {\n        home : false,\n        create : false,\n        search : true,\n        login : false,\n        register : false\n      },\n      ''\n    );\n    // CountSet(count+1);\n    captionDiv.current.style.display = \"none\";\n  }\n  \n  const RenderLogin = async (CountSet, count)=>{\n    await checkSession(\n      {\n        home : false,\n        create : false,\n        search : false,\n        login : true,\n        register : false\n      },\n      'Tell us Who you are ???'\n    );\n    // CountSet(count+1);\n    captionDiv.current.style.display = \"block\";\n  }\n\n  const RenderReg = (CountSet, count)=>{\n    setCaption(\"Lets get started here !!!\")\n    setShow(\n      {\n        home : false,\n        create : false,\n        search : false,\n        login : false,\n        register : true\n      }\n    )\n    // CountSet(count+1);\n    captionDiv.current.style.display = \"block\";\n  }\n\n  const [l, setLogin] = useState('Login');\n  const displayUser = (name)=>{\n    setLogin(`${name}`);\n  }\n\n  const showSet = (update)=>{\n    setShow(update);\n  }\n\n  const [Mnav, setMnav] = useState(false);\n\n  useEffect(()=>{\n    if(window.innerWidth < 500){\n      setMnav(true);\n    }\n  })\n\n  return(\n    <>\n        <div className=\"bg\" ></div>\n        <nav className='row'>\n            <div className=\"logo col\">\n                <a className=\"navlink\" href=\"#\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35\" height=\"35\" fill=\"currentColor\" class=\"bi bi-journal-richtext\" viewBox=\"0 0 16 16\" style={{color : \"white\"}}>\n                    <path d=\"M7.5 3.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0zm-.861 1.542 1.33.886 1.854-1.855a.25.25 0 0 1 .289-.047L11 4.75V7a.5.5 0 0 1-.5.5h-5A.5.5 0 0 1 5 7v-.5s1.54-1.274 1.639-1.208zM5 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5z\"/>\n                    <path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\"/>\n                    <path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\"/>\n                  </svg>\n                </a>\n            </div>\n            <div className=\"options col\">\n                <MNav mnav={Mnav} RenderHome={RenderHome} RenderCreate={RenderCreate} RenderSearch={RenderSearch} RenderLogin={RenderLogin} l={l}/>\n                <BigNav bigNav={!Mnav} RenderHome={RenderHome} RenderCreate={RenderCreate} RenderSearch={RenderSearch} RenderLogin={RenderLogin} l={l}/>\n            </div>\n        </nav>\n        <div className=\"home container-fluid p-5 m-0\">\n              <h2 className=\"mx-2 my-1 fw-bold fs-2\" ref={captionDiv} style={{color : \"white\"}}>{caption}</h2>\n              <div className=\"container-fluid\">\n                <Home2 home={show.home} />\n                <Create create={show.create}/>\n                <Login login={show.login} regAlert={RenderReg} SetUser={displayUser} ShowSet={showSet}/>\n                <Register Reg={show.register} SetUser={displayUser} ShowSet={showSet}/>\n                <Engine search={show.search}/>\n              </div>\n          </div>\n      </>\n  );\n\n  \n}\n\nexport default App;\n","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/reportWebVitals.js",[],[],"/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/Home/home2.js",[],[],"/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/Create/create.js",["72","73"],[],"import axios from 'axios';\nimport { useEffect, useRef, useState } from 'react';\nimport './create.css';\n\nconst Create = (prop)=>{\n\n    // useEffect(()=>{\n    //     const c = document.querySelector(\".nav-link:nth-of-type(2)\");\n    //     if(prop.create) c.style.borderBottom = \"1px solid black\";\n    //     else c.style.borderBottom = \"1px solid transparent\";\n    // })\n\n    const heart = useRef();\n    const heartFill = useRef();\n\n    const [Like, setLike] = useState(false);\n    const [h, setH] = useState(\"none\");\n    const [nh, setNH] = useState(\"inline\");\n\n    const like = ()=>{\n        heart.current.style.display = \"none\";\n        heartFill.current.style.display = \"inline\";\n        setLike(true);\n    }\n\n    const disLike = ()=>{\n        heart.current.style.display = \"inline\";\n        heartFill.current.style.display = \"none\";\n        setLike(false);\n    }\n\n    const [Title, setTitle] = useState();\n    const [Content, setContent] = useState();\n    const [Message, setMessage] = useState('');\n    const [load, setLoad] = useState('Save');\n\n    if(prop.title !== undefined){\n        setTitle(prop.title);\n        setContent(prop.content);\n        if(prop.like) setH(\"inline\");\n        else setNH(\"inline\");\n    }\n\n    console.log(prop);\n\n    const sendNote = async ()=>{\n        setLoad('a sec.....');\n        await axios({\n            method : 'post',\n            url : '/newNote',\n            headers : {},\n            data : {\n                title : `${Title}`,\n                content : `${Content}`,\n                like : Like\n            }\n        })\n        .then((ob)=>{\n            setLoad('Saved');\n            setInterval(()=>{\n                setLoad('Save');\n            }, 3000)\n            setTitle('');\n            setContent('');\n            setLike(false);\n            heart.current.style.display = \"inline\";\n            heartFill.current.style.display = \"none\";\n        })\n        .catch((ob)=>{\n            console.log(ob);\n        })\n    }\n\n    if(prop.create){\n        return(\n            <div className=\"create px-5\">\n                <input type=\"text\" className=\"my-2 py-2\" placeholder=\"Title\" \n                    onChange={(e)=>{setTitle(e.target.value)}}\n                    value={Title}\n                />\n                <textarea name=\"note\" cols=\"55\" rows=\"7\" className=\"\" placeholder=\"Content\"\n                    onChange={(e)=>{setContent(e.target.value)}}\n                    value={Content}\n                ></textarea>\n                <div className='noteFooter container-fluid row-10'>\n                    <span className='message'>{Message}</span>\n                    <button className=\"my-2 btn btn-outline-dark btn-bg col-7\" onClick={sendNote}>{load}</button>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"red\" className='bi bi-heart' viewBox=\"0 0 16 16\" onClick={like} ref={heart} style={{display : `${nh}`}}>\n                    <path d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"/>\n                    </svg>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"red\" class=\"bi bi-heart-fill\" viewBox=\"0 0 16 16\" ref={heartFill} style={{display : `${h}`}} onClick={disLike}>\n                    <path fill-rule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\n                    </svg>\n                </div>\n            </div>\n        );\n    }\n    return(\n        <></>\n    );\n}\n\nexport default Create;","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/Register/register.js",["74","75","76","77"],[],"import axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport './register.css';\n\nconst Register = (prop)=>{\n\n    const [email, setEmail] = useState();\n    const [username, setUser] = useState();\n    const [password, setPassword] = useState('');\n    const [conpassword, setConPassword] = useState();\n    const [err, setErr] = useState('');\n    const [something_went_wrong, setSWW] = useState('');\n\n    const btnMessage = useRef();\n    const ERR = useRef();\n\n    const loginProcess = ()=> {\n        const reg = async ()=>{\n            btnMessage.current.innerText = \"a sec....\";\n            await axios({\n                method : \"post\",\n                header : {},\n                url : \"/register\",\n                data : {\n                    user : `${username}`,\n                    email : `${email}`,\n                    password : `${password}`\n                }\n            })\n            .then((e)=>{\n                console.log(e.data);\n                if(e.data.message){\n                    btnMessage.current.innerText = \"Registered\";\n                    prop.SetUser(e.data.username);\n                    setInterval(()=>{\n                        prop.ShowSet(\n                            {\n                                home : true,\n                                create : false,\n                                search : false,\n                                login : false,\n                                register : false\n                            }\n                        )\n                    }, 2000);\n                }else{\n                    setSWW('Something went wrong');\n                    ERR.current.style.display = \"inline block\";\n                    setInterval(()=>{\n                        ERR.current.style.display = \"none\";\n                    }, 2000);\n                }\n            })\n            .catch((e)=>{\n                console.log(e);\n                setSWW('Something went wrong');\n                ERR.current.style.display = \"block\";\n                setInterval(()=>{\n                    ERR.current.style.display = \"none\";\n                }, 10500);\n            })\n        }\n        if(password == conpassword) reg();\n    }\n\n    useEffect(()=>{\n        if(password != '' && conpassword === password) setErr(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\" class=\"bi bi-check-circle-fill\" viewBox=\"0 0 16 16\">\n        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\n        </svg>);\n        else setErr(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\" class=\"bi bi-x-circle-fill\" viewBox=\"0 0 16 16\">\n        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\n        </svg>);\n    },[conpassword])\n\n    if(prop.Reg){\n        return(\n            <div className=\"register p-3\">\n                <input type=\"text\" className=\"my-1 p-1\" placeholder=\"Username\" id=\"email\"\n                    onChange={(e)=>{setUser(e.target.value)}}\n                />\n                <input type=\"email\" className=\"p-1\" placeholder=\"Email\" \n                    onChange={(e)=>{setEmail(e.target.value)}}\n                />\n                <input type=\"password\" className=\"my-1 p-1\" placeholder=\"Password\" \n                    onChange={(e)=>{setPassword(e.target.value)}}\n                />\n                <input type=\"password\" className=\"p-1\" placeholder=\"Confirm Password\" \n                    onChange={(e)=>{setConPassword(e.target.value)}}\n                />\n                <span className=\"err p-1\" >{err}</span>\n                <p style={{display : \"block\", fontSize : \"0.5em\", color: \"red\"}} ref={ERR}>{something_went_wrong}</p>\n                <button className=\"btn btn-outline-dark btn-bg\" onClick={loginProcess} ref={btnMessage}>Register</button>\n                <div className=\"createAccount\">\n                    <span>Already have an accout - </span>\n                    <a href=\"\">Login</a>\n                </div>\n            </div>\n        );\n    }\n    else return(<></>);\n}\n\nexport default Register;","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/Login/login.js",["78","79"],[],"import { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './login.css';\n\nconst Login = (prop)=>{\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [error, setError]  = useState(\"\");\n    const ERROR = useRef();\n\n    const loginProcess = ()=>{\n        const fetchData = async()=>{\n            await axios({\n                method: \"post\",\n                url: \"/login\",\n                headers: {},\n                data: {\n                    e : `${email}`,\n                    p : `${password}`\n                }\n            })\n            .then((ob)=>{\n                if(ob.data.message){\n                    prop.SetUser(ob.data.username);\n                    prop.ShowSet(\n                        {\n                            home : true,\n                            create : false,\n                            search : false,\n                            login : false,\n                            register : false\n                        }\n                    )\n                }else{\n                    setError(\"email or password is wrong\");\n                    setInterval(()=>{\n                        setError('');\n                    }, 5000);\n                }\n            })\n        }\n        if(email !== \"\" && password !== \"\") fetchData();\n        else{\n            setError(\"Do fill every field\");\n            setInterval(()=>{\n                setError('');\n            }, 5000);\n        }\n    }\n\n    if(prop.login){\n        return(\n            <div className=\"login\">\n                <input type=\"text\" className=\"my-2 py-2\" placeholder=\"Email\" \n                    onChange={(e)=>{setEmail(e.target.value)}}\n                />\n                <input type=\"password\" className=\"py-2\" placeholder=\"Password\"\n                    onChange={(e)=>{setPassword(e.target.value)}}\n                />\n                <button className=\"my-2 btn btn-outline-dark btn-bg\" onClick={loginProcess}>Login</button>\n                <p style={{fontSize : \"0.5em\", color: \"red\"}} ref={ERROR}>{error}</p>\n                <div className=\"createAccount\">\n                    <span>New to us - </span>\n                    <a onClick={prop.regAlert}>Create an Account</a>\n                </div>\n            </div>\n        );\n    }\n    return(\n        <></>\n    );\n}\n\nexport default Login;","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/SearchEngine/engine.js",["80","81","82"],[],"import axios from 'axios';\nimport React, { useEffect, useState, useRef } from 'react';\nimport './engine.css';\nimport Result from '../Result/result';\n\n\nconst Engine = (prop)=>{\n\n    const [searchText, setSearch] = useState('');\n    const [result, setResult] = useState([]);\n    const [edit, setEdit] = useState(\n        {\n            edit : \"none\",\n            title : undefined,\n            content : undefined,\n            liked : undefined\n        }\n    );\n    const deleteSearch = useRef();\n    const resSpan = useRef();\n\n    const DeleteSearch = ()=>{\n        setSearch('');\n    }\n\n    useEffect(()=>{\n        if(searchText.length > 0){\n            axios.get(`/searchNote?q=${searchText}`)\n            .then((ob)=>{\n                console.log(ob.data);\n                setResult(ob.data.d);\n            })\n            .catch((ob)=>{\n                console.log(ob);\n            })\n        }\n    },[searchText])\n\n    // const Edit = (id)=>{\n    //     const note = result.filter((res)=>{\n    //         if(res._id === id) return res;\n    //     })\n    //     console.log(note);\n    //     setTitle(note[0].title);\n    //     setContent(note[0].content);\n    //     setLiked(note[0].like);\n    //     // setEdit(true);\n    // }\n\n    if(prop.search){\n        return(\n            <div className='output'>\n                <div className=\"engine container-fluid p-3\">\n                    <input type=\"text\"  className=\"p-1\" placeholder=\"Search your notes\"\n                        onChange={(e)=>{\n                            setSearch(e.target.value);\n                        }}\n                        value={searchText}\n                    />\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" class=\"bi bi-x-circle-fill\" viewBox=\"0 0 16 16\" ref={deleteSearch} onClick={DeleteSearch}>\n                    <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\n                    </svg>\n                </div>\n                <div className=\"Result\" >\n                            {\n                                result.map((res)=>(\n                                    <div>\n                                        <Result res={res}/>\n                                    </div>\n                                ))\n                            }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Engine;\n\n// share={{title : res.title, content : res.content, liked : res.like}}","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/MobleNav/mNav.js",[],[],"/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/BigNav/BigNav.js",["83","84","85","86","87"],[],"import {useState} from 'react';\nimport './BigNav.css';\n\nconst BigNav = (prop)=>{\n\n    if(prop.bigNav){\n        return(\n            <>\n                <div className=\"bNav\">\n                    <a className=\"nav-link mx-5 fw-normal fs-6\" onClick={prop.RenderHome}>Home</a>\n                    <a className=\"nav-link mx-5 fw-normal fs-6\" onClick={prop.RenderCreate}>Create</a>\n                    <a className=\"nav-link mx-5 fw-normal fs-6\" onClick={prop.RenderSearch}>Search</a>\n                    <a className=\"nav-link mx-5 fw-normal fs-6\" onClick={prop.RenderLogin}>{prop.l}</a>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default BigNav;","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/Result/result.js",["88","89","90","91","92"],[],"import { useState, useRef } from \"react\";\nimport './result.css';\nimport axios from \"axios\";\n\nconst Result = ({res})=>{\n\n    const [Title, setTitle] = useState(\"\");\n    const [Content, setContent] = useState(\"\");\n    const [Like, setLike] = useState(false);\n    const [load, setLoad] = useState(\"Save\");\n    const [Message, setMessage] = useState();\n    const [h, setH] = useState(\"none\");\n    const [nh, setNH] = useState(\"inline\");\n\n    const heart = useRef();\n    const heartFill = useRef();\n\n    const Edit = ()=>{\n        setTitle(res.title);\n        setContent(res.content);\n        res.title = undefined;\n        res.content = undefined;\n    }\n\n    const like = ()=>{\n        heart.current.style.display = \"none\";\n        heartFill.current.style.display = \"inline\";\n        setLike(true);\n    }\n\n    const disLike = ()=>{\n        heart.current.style.display = \"inline\";\n        heartFill.current.style.display = \"none\";\n        setLike(false);\n    }\n\n    const sendNote = async ()=>{\n        setLoad('a sec.....');\n        await axios({\n            method : 'post',\n            url : '/updateNote',\n            headers : {},\n            data : {\n                id : `${res._id}`,\n                title : `${Title}`,\n                content : `${Content}`,\n                like : Like\n            }\n        })\n        .then((ob)=>{\n            console.log(ob);\n            setLoad('Saved');\n            setInterval(()=>{\n                setLoad('Save');\n            }, 3000)\n            setTitle(ob.data.title);\n            setContent(ob.data.content);\n            if(ob.data.like){\n                setLike(true);\n                heart.current.style.display = \"none\";\n                heartFill.current.style.display = \"inline\";\n            }else{\n                setLike(false);\n                heart.current.style.display = \"inline\";\n                heartFill.current.style.display = \"none\";\n            }\n        })\n        .catch((ob)=>{\n            console.log(ob);\n        })\n    }\n\n\n    return(\n        <div className=\"result px-5\">\n                <input type=\"text\" className=\"my-2 py-2\" placeholder=\"Title\" \n                    onChange={(e)=>{setTitle(e.target.value)}}\n                    value={res.title === undefined ? Title : res.title}\n                />\n                <textarea name=\"note\" cols=\"30\" rows=\"7\" className=\"\" placeholder=\"Content\"\n                    onChange={(e)=>{setContent(e.target.value)}}\n                    value={res.content === undefined ? Content : res.content}\n                ></textarea>\n                <div className='resultFooter container-fluid row-10'>\n                    <span className='message'>{Message}</span>\n                    <button className=\"my-2 btn btn-outline-dark col-7\" onClick={sendNote}>{load}</button>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"red\" className='bi bi-heart' viewBox=\"0 0 16 16\" onClick={like} ref={heart} style={{display : `${res.like ? \"none\" : \"inline\"}`}}>\n                    <path d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"/>\n                    </svg>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"red\" class=\"bi bi-heart-fill\" viewBox=\"0 0 16 16\" ref={heartFill} style={{display : `${res.like ? \"inline\" : \"none\"}`}} onClick={disLike}>\n                    <path fill-rule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\n                    </svg>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\" onClick={Edit}>\n                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n                    <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n                    </svg>\n                </div>\n            </div>\n    );\n} \n\nexport default Result;","/Users/sudhakaracnr/Documents/ReactProjects/note-app/Frontend/src/components/DropDown/dropdown.js",["93","94","95","96"],[],"const Dropdown = (prop)=>{\n    return(\n        <div className=\"dropdown\" ref={prop.refer}>\n            <a onClick={prop.RenderHome}>Home</a>\n            <a onClick={prop.RenderCreate}>Create</a>\n            <a onClick={prop.RenderSearch}>Search</a>\n            <a onClick={prop.RenderLogin}>{prop.l}</a>\n        </div>\n    );\n}\n\nexport default Dropdown;",{"ruleId":"97","severity":1,"message":"98","line":142,"column":3,"nodeType":"99","endLine":142,"endColumn":12,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":153,"column":17,"nodeType":"103","endLine":153,"endColumn":49},{"ruleId":"104","severity":1,"message":"105","line":2,"column":10,"nodeType":"99","messageId":"106","endLine":2,"endColumn":19},{"ruleId":"104","severity":1,"message":"107","line":34,"column":21,"nodeType":"99","messageId":"106","endLine":34,"endColumn":31},{"ruleId":"108","severity":1,"message":"109","line":63,"column":21,"nodeType":"110","messageId":"111","endLine":63,"endColumn":23},{"ruleId":"108","severity":1,"message":"112","line":67,"column":21,"nodeType":"110","messageId":"111","endLine":67,"endColumn":23},{"ruleId":"97","severity":1,"message":"113","line":73,"column":7,"nodeType":"114","endLine":73,"endColumn":20,"suggestions":"115"},{"ruleId":"101","severity":1,"message":"102","line":95,"column":21,"nodeType":"103","endLine":95,"endColumn":32},{"ruleId":"104","severity":1,"message":"105","line":1,"column":18,"nodeType":"99","messageId":"106","endLine":1,"endColumn":27},{"ruleId":"101","severity":1,"message":"116","line":66,"column":21,"nodeType":"103","endLine":66,"endColumn":48},{"ruleId":"104","severity":1,"message":"117","line":11,"column":12,"nodeType":"99","messageId":"106","endLine":11,"endColumn":16},{"ruleId":"104","severity":1,"message":"118","line":11,"column":18,"nodeType":"99","messageId":"106","endLine":11,"endColumn":25},{"ruleId":"104","severity":1,"message":"119","line":20,"column":11,"nodeType":"99","messageId":"106","endLine":20,"endColumn":18},{"ruleId":"104","severity":1,"message":"120","line":1,"column":9,"nodeType":"99","messageId":"106","endLine":1,"endColumn":17},{"ruleId":"101","severity":1,"message":"116","line":10,"column":21,"nodeType":"103","endLine":10,"endColumn":91},{"ruleId":"101","severity":1,"message":"116","line":11,"column":21,"nodeType":"103","endLine":11,"endColumn":93},{"ruleId":"101","severity":1,"message":"116","line":12,"column":21,"nodeType":"103","endLine":12,"endColumn":93},{"ruleId":"101","severity":1,"message":"116","line":13,"column":21,"nodeType":"103","endLine":13,"endColumn":92},{"ruleId":"104","severity":1,"message":"107","line":11,"column":21,"nodeType":"99","messageId":"106","endLine":11,"endColumn":31},{"ruleId":"104","severity":1,"message":"121","line":12,"column":12,"nodeType":"99","messageId":"106","endLine":12,"endColumn":13},{"ruleId":"104","severity":1,"message":"122","line":12,"column":15,"nodeType":"99","messageId":"106","endLine":12,"endColumn":19},{"ruleId":"104","severity":1,"message":"123","line":13,"column":12,"nodeType":"99","messageId":"106","endLine":13,"endColumn":14},{"ruleId":"104","severity":1,"message":"124","line":13,"column":16,"nodeType":"99","messageId":"106","endLine":13,"endColumn":21},{"ruleId":"101","severity":1,"message":"116","line":4,"column":13,"nodeType":"103","endLine":4,"endColumn":42},{"ruleId":"101","severity":1,"message":"116","line":5,"column":13,"nodeType":"103","endLine":5,"endColumn":44},{"ruleId":"101","severity":1,"message":"116","line":6,"column":13,"nodeType":"103","endLine":6,"endColumn":44},{"ruleId":"101","severity":1,"message":"116","line":7,"column":13,"nodeType":"103","endLine":7,"endColumn":43},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMnav'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["125"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","unusedVar","'setMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array.","ArrayExpression",["126"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","'resSpan' is assigned a value but never used.","'useState' is defined but never used.","'h' is assigned a value but never used.","'setH' is assigned a value but never used.","'nh' is assigned a value but never used.","'setNH' is assigned a value but never used.",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Add dependencies array: []",{"range":"131","text":"132"},"Update the dependencies array to be: [conpassword, password]",{"range":"133","text":"134"},[3214,3214],", []",[3050,3063],"[conpassword, password]"]